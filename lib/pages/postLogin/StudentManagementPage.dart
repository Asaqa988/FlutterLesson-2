// ููุณุชูุฑุฏ ููุชุจุฉ Flutter ุงูุฑุฆูุณูุฉ ูุจูุงุก ุงููุงุฌูุฉ ูุงูุชุนุงูู ูุน ุงูุนูุงุตุฑ
import 'package:flutter/material.dart';

/// ูุงู ุงูุตูุญุฉ ุงุณููุง StudentManagementPage
/// ูุฏููุง ุฅููุง ุชุนุทู ุงููุณุชุฎุฏู ูุงุฌูุฉ ูุถูู ูููุง ุทูุงุจุ ูุนุฏูู ุนููููุ ูุจุญุซ ุนูููุ ุฃู ูุญุฐููู
class StudentManagementPage extends StatefulWidget {
  // ููู ุจูุณุชูุจู ูุงุฆูุฉ ุงูุทูุงุจ (globalStudents) ูู ุงูุดุงุดุฉ ุงูุฑุฆูุณูุฉ
  final List<String> globalStudents;

  // ูููุณุชุฑูุชุฑ ุงูุตูุญุฉุ ูุงุฒู ูุณุชูุจู ูุณุชุฉ ุงูุทูุงุจ
  const StudentManagementPage({super.key, required this.globalStudents});

  @override
  State<StudentManagementPage> createState() => _StudentManagementPageState();
}

/// ูุงู ุงูููุงุณ ุจุชุญุชูู ูู ุงูุญุงูุฉ ุงูููุทููุฉ ูุงูุณููููุงุช ููุดุงุดุฉ (State)
class _StudentManagementPageState extends State<StudentManagementPage> {
  // ููุชุฑููุฑ ูุชููุณุช ูููุฏ ุชุจุน ุฅุฏุฎุงู ุงุณู ุงูุทุงูุจ
  final TextEditingController _controller = TextEditingController();

  // ููุชุฑููุฑ ูุญูู ุงูุจุญุซ
  final TextEditingController _searchController = TextEditingController();

  // ูุชุบููุฑ ุจูุฎุฒู ููู ุงููููุฉ ุงููู ุงููุณุชุฎุฏู ูุชุจูุง ูู ุงูุจุญุซ
  String searchQuery = '';

  // ุฅุฐุง ุงููุณุชุฎุฏู ุนู ูุนุฏูู ุงุณู ุทุงูุจุ ุจูุญูุธ ุฑูู ุงูุณุทุฑ ุงููู ุนู ูุชุนุฏูู
  int? editingIndex;

  /// Getter ุจุชุฑุฌุน ูุงุฆูุฉ ุงูุทูุงุจ ุจุนุฏ ุงูููุชุฑุฉ ุญุณุจ ุงูุจุญุซ
  /// ุฅุฐุง ุงููุณุชุฎุฏู ูุด ูุงุชุจ ุฅุดู ูู ุงูุจุญุซุ ุจูุนุฑุถ ูู ุงูุทูุงุจ
  List<String> get filteredStudents {
    if (searchQuery.isEmpty) return widget.globalStudents;
    return widget.globalStudents
        .where(
          (student) =>
              student.toLowerCase().contains(searchQuery.toLowerCase()),
        )
        .toList();
  }

  /// ูุงู ุงููููุดู ุจุชุดุชุบู ููุง ุงููุณุชุฎุฏู ูุถุบุท "Add" ุฃู "Update"
  void _addOrUpdateStudent() {
    final name = _controller.text
        .trim(); // ููุฌูุจ ุงูุงุณู ูู ุญูู ุงููุต ููุดููู ุงููุณุงูุงุช

    if (name.isEmpty) return; // ุฅุฐุง ุงูุญูู ูุงุถูุ ูุง ููุนูู ุฅุดู

    setState(() {
      if (editingIndex != null) {
        // ุฅุฐุง ููุง ุจูุนุฏูู ุทุงูุจุ ููุญุฏูุซ ุงูุงุณู ุจุงูููุงู ุงูููุงุณุจ
        widget.globalStudents[editingIndex!] = name;
        editingIndex = null; // ููุฑุฌุน ุงููุถุน ูุทุจูุนุชู
      } else if (!widget.globalStudents.contains(name)) {
        // ุฅุฐุง ุงุณู ุฌุฏูุฏ ููุง ุจูุชูุฑุฑุ ููุถููู ูููุงุฆูุฉ
        widget.globalStudents.add(name);
      }

      _controller.clear(); // ูููุถู ุงูุญูู ุจุนุฏ ุงูุฅุถุงูุฉ/ุงูุชุนุฏูู
    });
  }

  /// ูุงู ุงููููุดู ุจุชุญุฐู ุทุงูุจ ูู ุงููุงุฆูุฉ
  void _deleteStudent(int index) {
    setState(() {
      // ูุงุฒู ูุนุฑู ุงูุฑูู ุงูุญูููู ููุทุงูุจ ูู ุงููุงุฆูุฉ ุงูุฃุตููุฉ
      final realIndex = widget.globalStudents.indexOf(filteredStudents[index]);
      widget.globalStudents.removeAt(realIndex); // ุญุฐู ูู ุงููุงุฆูุฉ
    });
  }

  /// ูุงู ุจุชุฌููุฒ ุงูุทุงูุจ ููุชุนุฏูู (ุจุชุนุจูู ุงุณูู ูู ุญูู ุงููุต)
  void _editStudent(int index) {
    final realIndex = widget.globalStudents.indexOf(filteredStudents[index]);

    _controller.text =
        widget.globalStudents[realIndex]; // ูุนุฑุถ ุงูุงุณู ูู ุญูู ุงููุต

    setState(() {
      editingIndex = realIndex; // ูุฎุฒู ุฑูู ุงูุณุทุฑ ุงููู ุจูุนุฏููู
    });
  }

  /// ููู ููุจูู ูุงุฌูุฉ ุงููุณุชุฎุฏู ุงููุงููุฉ
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Manage Students"), // ุนููุงู ุงูุดุฑูุท ุงูุนููู
        backgroundColor: Colors.blue, // ููู ุงูุดุฑูุท
      ),
      body: Padding(
        padding: const EdgeInsets.all(16), // ุญุดูุฉ ุฏุงุฎููุฉ ูููุญุชูู
        child: Column(
          children: [
            // ================== ๐ ุญูู ุงูุจุญุซ ==================
            TextField(
              controller: _searchController,
              decoration: InputDecoration(
                labelText: 'Search Students', // ูุต ุธุงูุฑ ุฏุงุฎู ุงูุญูู
                prefixIcon: Icon(Icons.search), // ุฃููููุฉ ุจุญุซ ุฏุงุฎู ุงูุญูู
                border: OutlineInputBorder(), // ุญูุงู ูุฑุจุนุฉ ููุญูู
              ),
              // ูู ูุฑุฉ ุงููุณุชุฎุฏู ููุชุจ ูููุงุ ููุญุฏูุซ ูููุฉ ุงูุจุญุซ ูููุนูุฏ ุจูุงุก ุงููุงุฌูุฉ
              onChanged: (value) => setState(() => searchQuery = value),
            ),

            SizedBox(height: 10),

            // ================== ๐ง ุญูู ุฅุฏุฎุงู ุงุณู ุงูุทุงูุจ ==================
            TextField(
              controller: _controller,
              decoration: InputDecoration(
                // ุฅุฐุง ุนู ูุนุฏูู ุทุงูุจุ ุจูุบููุฑ ุงููุต ุงูุธุงูุฑ
                labelText: editingIndex != null ? 'Edit Name' : 'Student Name',
                border: OutlineInputBorder(),
              ),
            ),

            SizedBox(height: 10),

            // ================== ุฒุฑ ุงูุฅุถุงูุฉ ุฃู ุงูุชุญุฏูุซ โ ==================
            ElevatedButton(
              onPressed: _addOrUpdateStudent, // ุจููุฐ ุงูุฏุงูุฉ ุญุณุจ ุงููุถุน ุงูุญุงูู
              child: Text(editingIndex != null ? "Update" : "Add Student"),
              style: ElevatedButton.styleFrom(backgroundColor: Colors.blue),
            ),

            SizedBox(height: 20),

            // ================== ๐ฅ ุนุฑุถ ุงูุทูุงุจ ==================
            Expanded(
              child: ListView.builder(
                itemCount: filteredStudents.length, // ุจูุนุฑุถ ุงูุทูุงุจ ุจุนุฏ ุงูููุชุฑุฉ
                itemBuilder: (context, index) {
                  final student = filteredStudents[index];

                  return ListTile(
                    leading: CircleAvatar(
                      child: Text(student[0]), // ุฃูู ุญุฑู ูู ุงุณู ุงูุทุงูุจ
                    ),
                    title: Text(student), // ุงุณู ุงูุทุงูุจ ูุงูู
                    trailing: Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        // โ๏ธ ุฒุฑ ุงูุชุนุฏูู
                        IconButton(
                          icon: Icon(Icons.edit, color: Colors.orange),
                          onPressed: () => _editStudent(index),
                        ),

                        // ๐๏ธ ุฒุฑ ุงูุญุฐู
                        IconButton(
                          icon: Icon(Icons.delete, color: Colors.red),
                          onPressed: () => _deleteStudent(index),
                        ),
                      ],
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
